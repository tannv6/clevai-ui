@import '../../base/css/common.scss';

$levels: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
  20, 21, 22, 23, 24;

.container {
  width: 1298px;
  margin: 0 auto;
  overflow: hidden;
}

.container-fluid {
  width: 100%;
  margin: 0 auto;
  overflow: hidden;
}

.row {
  box-sizing: border-box;
  overflow: hidden;
  &-reversed {
    display: flex;
    justify-content: flex-end;
  }
}

.rows {
  box-sizing: border-box;
  display: flex;
  flex-wrap: wrap;
  &-reversed {
    justify-content: flex-end;
  }
  @each $gutter in $levels {
    &.gutter-x-#{$gutter} {
      margin-left: -#{$gutter}px;
      margin-right: -#{$gutter}px;
      .col {
        padding-left: #{$gutter}px;
        padding-right: #{$gutter}px;
      }
    }
    &.gutter-y-#{$gutter} {
      row-gap: $gutter * 2px;
    }
    &.gutter-x-xl-#{$gutter} {
      @media (min-width: $desktopWidthMin) {
        margin-left: -#{$gutter}px;
        margin-right: -#{$gutter}px;
        .col {
          padding-left: #{$gutter}px;
          padding-right: #{$gutter}px;
        }
      }
    }
    &.gutter-x-md-#{$gutter} {
      @media (min-width: $tabletWidthMin) and (max-width: $tabletWidthMax) {
        margin-left: -#{$gutter}px;
        margin-right: -#{$gutter}px;
        .col {
          padding-left: #{$gutter}px;
          padding-right: #{$gutter}px;
        }
      }
    }
    &.gutter-x-sm-#{$gutter} {
      @media (max-width: $mobileWidthMax) {
        margin-left: -#{$gutter}px;
        margin-right: -#{$gutter}px;
        .col {
          padding-left: #{$gutter}px;
          padding-right: #{$gutter}px;
        }
      }
    }
    &.gutter-y-xl-#{$gutter} {
      @media (min-width: $desktopWidthMin) {
        row-gap: $gutter * 2px;
      }
    }
    &.gutter-y-md-#{$gutter} {
      @media (min-width: $tabletWidthMin) and (max-width: $tabletWidthMax) {
        row-gap: $gutter * 2px;
      }
    }
    &.gutter-y-sm-#{$gutter} {
      @media (max-width: $mobileWidthMax) {
        row-gap: $gutter * 2px;
      }
    }
  }
}
.wrapper {
  box-sizing: border-box;
  &.display-inline {
    display: inline-block;
  }
}

.bg-white {
  background: $whiteColor;
}
.bg-primary {
  background: $primaryColor;
}
.bg-tranparent {
  background: unset;
}
.bg-background {
  background: $backgroundColor;
}

.justify-start {
  justify-content: start;
}
.justify-end {
  justify-content: end;
}
.justify-center {
  justify-content: center;
}
.justify-around {
  justify-content: space-around;
}
.justify-between {
  justify-content: space-between;
}
.justify-evenly {
  justify-content: space-evenly;
}

.align-start {
  align-items: flex-start;
}
.align-end {
  align-items: flex-end;
}
.align-center {
  align-items: center;
}
.align-stretch {
  align-items: stretch;
}
.align-baseline {
  align-items: baseline;
}

@each $level in $levels {
  .br-#{$level} {
    border-radius: $level * 2px;
  }
}

@each $level in $levels {
  .pt-#{$level} {
    padding-top: $level * 2px;
  }
  .pb-#{$level} {
    padding-bottom: $level * 2px;
  }
  .pl-#{$level} {
    padding-left: $level * 2px;
  }
  .pr-#{$level} {
    padding-right: $level * 2px;
  }
  .p-#{$level} {
    padding: $level * 2px;
  }
  .mt-#{$level} {
    margin-top: $level * 2px;
  }
  .mr-#{$level} {
    margin-right: $level * 2px;
  }
  .ml-#{$level} {
    margin-left: $level * 2px;
  }
  .mb-#{$level} {
    margin-bottom: $level * 2px;
  }
  .m-#{$level} {
    margin: $level * 2px;
  }
  @media (min-width: $desktopWidthMin) {
    .pt-xl-#{$level} {
      padding-top: $level * 2px;
    }
    .pb-xl-#{$level} {
      padding-bottom: $level * 2px;
    }
    .pl-xl-#{$level} {
      padding-left: $level * 2px;
    }
    .pr-xl-#{$level} {
      padding-right: $level * 2px;
    }
    .p-xl-#{$level} {
      padding: $level * 2px;
    }
    .mt-xl-#{$level} {
      margin-top: $level * 2px;
    }
    .mr-xl-#{$level} {
      margin-right: $level * 2px;
    }
    .ml-xl-#{$level} {
      margin-left: $level * 2px;
    }
    .mb-xl-#{$level} {
      margin-bottom: $level * 2px;
    }
    .m-xl-#{$level} {
      margin: $level * 2px;
    }
  }
  @media (min-width: $tabletWidthMin) and (max-width: $tabletWidthMax) {
    .pt-md-#{$level} {
      padding-top: $level * 2px;
    }
    .pb-md-#{$level} {
      padding-bottom: $level * 2px;
    }
    .pl-md-#{$level} {
      padding-left: $level * 2px;
    }
    .pr-md-#{$level} {
      padding-right: $level * 2px;
    }
    .p-md-#{$level} {
      padding: $level * 2px;
    }
    .mt-md-#{$level} {
      margin-top: $level * 2px;
    }
    .mr-md-#{$level} {
      margin-right: $level * 2px;
    }
    .ml-md-#{$level} {
      margin-left: $level * 2px;
    }
    .mb-md-#{$level} {
      margin-bottom: $level * 2px;
    }
    .m-md-#{$level} {
      margin: $level * 2px;
    }
  }
  @media (max-width: $mobileWidthMax) {
    .pt-sm-#{$level} {
      padding-top: $level * 2px;
    }
    .pb-sm-#{$level} {
      padding-bottom: $level * 2px;
    }
    .pl-sm-#{$level} {
      padding-left: $level * 2px;
    }
    .pr-sm-#{$level} {
      padding-right: $level * 2px;
    }
    .p-sm-#{$level} {
      padding: $level * 2px;
    }
    .mt-sm-#{$level} {
      margin-top: $level * 2px;
    }
    .mr-sm-#{$level} {
      margin-right: $level * 2px;
    }
    .ml-sm-#{$level} {
      margin-left: $level * 2px;
    }
    .mb-sm-#{$level} {
      margin-bottom: $level * 2px;
    }
    .m-sm-#{$level} {
      margin: $level * 2px;
    }
  }
}

$orders: -1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12;
$grids: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12;

.col {
  box-sizing: border-box;
  > * {
    height: 100%;
  }
}

@each $grid in $grids {
  .offset-#{$grid} {
    margin-left: ($grid / 12) * 100%;
  }
}

@each $order in $orders {
  .order-#{$order} {
    order: $order;
  }
}

@each $grid in $grids {
  .xl-#{$grid} {
    width: ($grid / 12) * 100%;
  }
  .span-#{$grid} {
    width: ($grid / 12) * 100%;
  }
}

@media (min-width: $tabletWidthMin) and (max-width: $tabletWidthMax) {
  @each $grid in $grids {
    .md-#{$grid} {
      width: ($grid / 12) * 100%;
    }
  }
}

@media (max-width: $mobileWidthMax) {
  @each $grid in $grids {
    .sm-#{$grid} {
      width: ($grid / 12) * 100%;
    }
  }
}
